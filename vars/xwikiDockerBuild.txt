Example usage:

```
node('docker') {
  xwikiDockerBuild {
    configurations = [
      'MySQL 5.7.x, Tomcat 8.5.x, Chrome': [
        'database' : 'mysql',
        'databaseTag' : '5.7',
        'jdbcVersion' : '5.1.45',
        'servletEngine' : 'tomcat',
        'servletEngineTag' : '8.5',
        'browser' : 'chrome',
        'verbose' : 'true'
      ]]
    modules = 'xwiki-platform-core/xwiki-platform-menu'
  }
)
```

The following options are available:

* `configurations`: The list of XWiki configurations on which to execute the Docker/TestContainers-based tests.
* `modules`: The list of Maven modules on which to execute the Docker/TestContainers-based tests. If not specified,
  then look for all modules matching the pattern `*-test-docker`.
* `jobProperties` = `[parameters([string(defaultValue: 'standard', description: 'Job type', name: 'type')])]`. Sets
  properties that will be merged (and take precedence when on the same content) with the default ones. This allows
  adding some crons, parameters, etc.
* `skipMail` = true (default is `false`). If true then don't send emails when the job or tests fail.
* `label` = `docker-outside-docker` (default is `docker`). If specified will use that label to identify on which node
  to execute the Docker-based tests.
* `type` = the job type. Valid values are `docker-latest`, `docker-all` and `docker-unsupported`

Notes:

The Docker/TestContainers-based test modules must follow these rules:
* Be located in a `XXX/XXX-test/XXX-test-docker` directory.
* (optional) Have a `XXX-ui` module containing the UI being tested and the needed dependencies. Note that UI module
  will be built before building the `XXX-test-docker` module.
